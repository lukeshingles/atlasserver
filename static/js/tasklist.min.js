"use strict";var jslcdataglobal=new Object,jslabelsglobal=new Object,jslimitsglobal=new Object,api_request_active=!1;class TaskPlot extends React.Component{constructor(e){super(e)}componentDidMount(){console.log("activating plot",this.props.taskid);var e=new URL(this.props.taskurl);e.pathname+="resultplotdata.js",e.search="",$.ajax({url:e,cache:!0,dataType:"script"})}componentWillUnmount(){console.log("Unmounting plot for task ",this.props.taskid),delete jslimitsglobal["#plotforcedflux-task-"+this.props.taskid],delete jslcdataglobal["#plotforcedflux-task-"+this.props.taskid],delete jslabelsglobal["#plotforcedflux-task-"+this.props.taskid]}render(){return React.createElement("div",{key:"plot",id:"plotforcedflux-task-"+this.props.taskid,className:"plot",style:{width:"100%",height:"300px"}})}}class Task extends React.Component{constructor(e){super(e),this.requestImages=this.requestImages.bind(this),this.deleteTask=this.deleteTask.bind(this),this.state={},this.state.updateTimeElapsed=this.updateTimeElapsed.bind(this),this.state.interval=null,this.state.timeelapsed=-1}deleteTask(){$.ajax({url:this.props.taskdata.url,method:"delete",success:e=>{this.props.fetchData()}})}requestImages(){$.ajax({url:this.props.taskdata.url+"requestimages",method:"get",success:e=>{this.props.fetchData()}})}static getDerivedStateFromProps(e,t){if(null!=e.taskdata.starttimestamp&&null==e.taskdata.finishtimestamp){if(null==t.interval){var s=new Date(e.taskdata.starttimestamp).getTime(),a=((new Date).getTime()-s)/1e3;return{interval:setInterval(t.updateTimeElapsed,1e3),timeelapsed:a.toFixed(0)}}}else if(null!=t.interval)return{interval:null};return null}componentDidMount(){if(this.updateTimeElapsed(),newtaskids.includes(this.props.taskdata.id)){var e="#task-"+this.props.taskdata.id;$(e).hide(),$(e).show(700),delete newtaskids[this.props.taskdata.id]}}componentWillUnmount(){clearInterval(this.state.interval)}updateTimeElapsed(){if(null!=this.props.taskdata.starttimestamp&&null==this.props.taskdata.finishtimestamp){var e=new Date(this.props.taskdata.starttimestamp).getTime(),t=((new Date).getTime()-e)/1e3;this.setState({timeelapsed:t.toFixed(0)})}else null!=this.state.interval&&(clearInterval(this.state.interval),this.setState({interval:null}))}shouldComponentUpdate(e,t){return null!=e.taskdata.starttimestamp&&null==e.taskdata.finishtimestamp||JSON.stringify(e)!=JSON.stringify(this.props)}render(){var e=this.props.taskdata,t="none",s="none";null!=e.finishtimestamp?(t="finished",s="Delete"):null!=e.starttimestamp?(t="queued started",s="Cancel"):(t="queued notstarted",s="Cancel"),console.log("Task "+e.id+" rendered");var a=null;e.user_id==user_id&&(a=React.createElement("button",{className:"btn btn-sm btn-danger",onClick:this.deleteTask},s));var r=[React.createElement("div",{key:"rightside",className:"rightside"},a,React.createElement("img",{src:e.previewimage_url,style:{display:"block",marginTop:"1em",marginLeft:"1em"}}))];if(r.push(React.createElement("div",{key:"tasknum"},React.createElement("a",{key:"tasklink",onClick:()=>this.props.setSingleTaskView(e.url)},"Task ",e.id))),e.parent_task_url?r.push(React.createElement("p",{key:"imgrequest"},"Image request for ",React.createElement("a",{key:"parent_task_link",href:e.parent_task_url},"Task ",e.parent_task_id))):e.parent_task&&r.push(React.createElement("p",{key:"imgrequest"},"Image request for Task ",e.parent_task_id," (deleted)")),e.parent_task_id){var i=e.use_reduced?"reduced":"difference";r.push(React.createElement("p",{key:"imgrequestnote"},"Up to the first 500 ",i," images will be retrieved. The image request and download link may expire after one week."))}if(e.user_id!=user_id&&r.push(React.createElement("div",{key:"user"},"User: ",e.username)),null!=e.comment&&""!=e.comment&&r.push(React.createElement("div",{key:"comment"},"Comment: ",React.createElement("b",null,e.comment))),null!=e.mpc_name?r.push(React.createElement("div",{key:"target"},"MPC Object: ",e.mpc_name)):r.push(React.createElement("div",{key:"target"},"RA Dec: ",e.ra," ",e.dec)),r.push(React.createElement("div",{key:"imgtype"},"Images: ",e.use_reduced?"Reduced":"Difference")),null!=e.mjd_min||null!=e.mjd_max){var l=null!=e.mjd_min?e.mjd_min:"0",n=null!=e.mjd_max?e.mjd_max:"∞";r.push(React.createElement("div",{key:"mjdrange"},"MJD range: [",l,", ",n,"]"))}return r.push(React.createElement("div",{key:"queuetime"},"Queued at ",new Date(e.timestamp).toLocaleString())),null!=e.finishtimestamp?(r.push(React.createElement("div",{key:"status"},"Finished at ",new Date(e.finishtimestamp).toLocaleString())),null!=e.error_msg?r.push(React.createElement("p",{key:"error_msg",style:{color:"black",fontWeight:"bold",marginTop:"1em"}},"Error: ",e.error_msg)):("FP"==e.request_type&&(r.push(React.createElement("a",{key:"datalink",className:"results btn btn-info getdata",href:e.result_url,target:"_blank"},"Data")),r.push(React.createElement("a",{key:"pdflink",className:"results btn btn-info getpdf",href:e.pdfplot_url,target:"_blank"},"PDF"))),"IMGZIP"==e.request_type?null!=e.result_imagezip_url&&r.push(React.createElement("a",{key:"imgdownload",className:"results btn btn-info",href:e.result_imagezip_url},"Download images (ZIP)")):null!=e.imagerequest_taskid?e.imagerequest_finished?r.push(React.createElement("a",{key:"imgrequest",className:"btn btn-primary",href:e.imagerequest_url},"Images ready")):r.push(React.createElement("a",{key:"imgrequest",className:"btn btn-warning",href:e.imagerequest_url},"Images requested")):user_id==e.user_id&&r.push(React.createElement("button",{key:"imgrequest",className:"btn btn-info",onClick:this.requestImages,title:"Download FITS and JPEG images for up to the first 500 observations."},"Request ",e.use_reduced?"reduced":"diff"," images")))):null!=e.starttimestamp?r.push(React.createElement("div",{key:"status",style:{color:"red",fontStyle:"italic",marginTop:"1em"}},"Running (started ",this.state.timeelapsed," seconds ago)")):r.push(React.createElement("div",{key:"status",style:{fontStyle:"italic",marginTop:"1em"}},"Waiting (",e.queuepos," tasks ahead of this one)")),null!=e.finishtimestamp&&null==e.error_msg&&"FP"==e.request_type&&r.push(React.createElement(TaskPlot,{key:"plot",taskid:e.id,taskurl:e.url})),React.createElement("li",{key:"task-"+e.id,className:"task "+t,id:"task-"+e.id},r)}}function getCursor(e){return null==e?null:new URL(e).searchParams.get("cursor")}class Pager extends React.Component{constructor(e){super(e),this.state={},this.state.previous_cursor=getCursor(this.props.previous),this.state.next_cursor=getCursor(this.props.next)}static getDerivedStateFromProps(e,t){var s={};return s.previous_cursor=getCursor(e.previous),s.next_cursor=getCursor(e.next),s}shouldComponentUpdate(e,t){return JSON.stringify(this.props)!=JSON.stringify(e)}render(){return console.log("Pager rendered"),null==this.props.taskcount?null:React.createElement("div",{id:"paginator",key:"paginator"},React.createElement("p",{key:"pagedescription"},"Showing tasks ",this.props.pagefirsttaskposition+1,"-",this.props.pagefirsttaskposition+this.props.pagetaskcount," of ",this.props.taskcount),React.createElement("ul",{key:"prevnext",className:"pager"},null!=this.props.previous?React.createElement("li",{key:"previous",className:"previous"},React.createElement("a",{onClick:()=>{this.props.updateCursor(this.state.previous_cursor)},style:{cursor:"pointer"}},"« Newer")):null,null!=this.props.next?React.createElement("li",{key:"next",className:"next"},React.createElement("a",{onClick:()=>{this.props.updateCursor(this.state.next_cursor)},style:{cursor:"pointer"}},"Older »")):null))}}class TaskList extends React.Component{constructor(e){super(e),this.state={taskcount:null,results:null,status:"Loading...",api_url:e.api_url},this.setSingleTaskView=this.setSingleTaskView.bind(this),this.updateCursor=this.updateCursor.bind(this),this.fetchData=this.fetchData.bind(this)}setSingleTaskView(e){console.log("Task list changed to single task view for ",e),this.setState({api_url:e},(()=>{this.fetchData(!0)}));var t=new URL(e);t.searchParams.delete("format"),window.history.pushState({},document.title,t),$("#tasklist").addClass("singletaskdetail"),$(".newrequest").hide()}updateCursor(e){if(e!=getCursor(this.state.api_url)){console.log("Task list cursor changed to ",e);var t=new URL(this.state.api_url);null!=e?t.searchParams.set("cursor",e):t.searchParams.delete("cursor"),this.setState({api_url:t.toString()},(()=>{this.fetchData(!0)}));var s=new URL(window.location.href);null!=e?s.searchParams.set("cursor",e):s.searchParams.delete("cursor"),s.searchParams.delete("format"),window.history.pushState({},document.title,s)}}fetchData(e){!document[hidden]&&user_is_active&&(api_request_active?console.log("prevent overlapping GET requests"):(api_request_active=!0,console.log("Fetching task list from ",this.state.api_url),fetch(this.state.api_url,{ifModified:!0,headers:{Accept:"application/json","Content-Type":"application/json"}}).then((e=>(api_request_active=!1,e.json()))).catch((e=>{console.log("HTTP request failed",e)})).then((t=>{t.hasOwnProperty("results")?(this.setState(t),0==this.state.results.length&&null!=getCursor(this.state.api_url)&&this.updateCursor(null)):this.setState({results:[t]}),e&&window.scrollTo(0,0)}))))}componentDidMount(){this.fetchData(!1),this.interval=setInterval((()=>this.fetchData()),3e3)}componentWillUnmount(){clearInterval(this.interval)}render(){if(null==this.state.results)return React.createElement("p",null,"Loading tasks...");if(0==this.state.results.length)return React.createElement("p",null,"There are no tasks.");var e=null!=this.state.results?this.state.results.length:null;return React.createElement("div",null,React.createElement("ul",{key:"tasklist",className:"tasks"},this.state.results.map((e=>React.createElement(Task,{key:e.id,taskdata:e,fetchData:this.fetchData,setSingleTaskView:this.setSingleTaskView})))),React.createElement(Pager,{key:"pager",previous:this.state.previous,next:this.state.next,pagefirsttaskposition:this.state.pagefirsttaskposition,pagetaskcount:e,taskcount:this.state.taskcount,updateCursor:this.updateCursor}))}}ReactDOM.render(React.createElement(TaskList,{api_url:api_url}),document.getElementById("tasklist"));
