"use strict";var jslcdataglobal=new Object,jslabelsglobal=new Object,jslimitsglobal=new Object,api_request_active=!1;class TaskPlot extends React.Component{constructor(e){super(e)}componentDidMount(){console.log("activating plot",this.props.taskid),$.ajax({url:api_url_base+"queue/"+this.props.taskid+"/resultplotdata.js",cache:!0,dataType:"script"})}render(){return React.createElement("div",{key:"plot",id:"plotforcedflux-task-"+this.props.taskid,className:"plot",style:{width:"100%",height:"300px"}})}}class Task extends React.Component{constructor(e){super(e),this.requestImages=this.requestImages.bind(this),this.deleteTask=this.deleteTask.bind(this),this.state={},this.state.updateTimeElapsed=this.updateTimeElapsed.bind(this),this.state.interval=null,this.state.timeelapsed=-1}deleteTask(){$.ajax({url:this.props.taskdata.url,method:"delete",success:e=>{this.props.fetchData()}})}requestImages(){$.ajax({url:this.props.taskdata.url+"requestimages",method:"get",success:e=>{this.props.fetchData()}})}static getDerivedStateFromProps(e,t){if(null!=e.taskdata.starttimestamp&&null==e.taskdata.finishtimestamp){if(null==t.interval){var s=new Date(e.taskdata.starttimestamp).getTime(),a=((new Date).getTime()-s)/1e3;return{interval:setInterval(t.updateTimeElapsed,1e3),timeelapsed:a.toFixed(0)}}}else if(null!=t.interval)return{interval:null};return null}componentDidMount(){this.updateTimeElapsed()}componentWillUnmount(){clearInterval(this.state.interval)}updateTimeElapsed(){if(null!=this.props.taskdata.starttimestamp&&null==this.props.taskdata.finishtimestamp){var e=new Date(this.props.taskdata.starttimestamp).getTime(),t=((new Date).getTime()-e)/1e3;this.setState({timeelapsed:t.toFixed(0)})}else null!=this.state.interval&&(clearInterval(this.state.interval),this.setState({interval:null}))}shouldComponentUpdate(e,t){return null!=e.taskdata.starttimestamp&&null==e.taskdata.finishtimestamp||JSON.stringify(e)!=JSON.stringify(this.props)}render(){var e=this.props.taskdata,t="none",s="none";null!=e.finishtimestamp?(t="finished",s="Delete"):null!=e.starttimestamp?(t="queued started",s="Cancel"):(t="queued notstarted",s="Cancel"),console.log("Task "+e.id+" rendered");var a=[React.createElement("div",{key:"rightside",className:"rightside"},React.createElement("button",{className:"btn btn-sm btn-danger",onClick:this.deleteTask},s),React.createElement("img",{src:e.previewimage_url,style:{display:"block",marginTop:"1em",marginLeft:"1em"}}))];if(a.push(React.createElement("div",{key:"tasknum"},React.createElement("a",{key:"tasklink",onClick:()=>this.props.setSingleTaskView(e.url)},"Task ",e.id))),e.parent_task_url?a.push(React.createElement("p",{key:"imgrequest"},"Image request for ",React.createElement("a",{key:"parent_task_link",href:e.parent_task_url+"?usereact"},"Task ",e.parent_task_id))):e.parent_task&&a.push(React.createElement("p",{key:"imgrequest"},"Image request for Task ",e.parent_task_id," (deleted)")),e.parent_task_id){var r=e.use_reduced?"reduced":"difference";a.push(React.createElement("p",{key:"imgrequestnote"},"Up to the first 500 ",r," images will be retrieved. The image request and download link may expire after one week."))}if(e.user_id!=user_id&&a.push(React.createElement("div",{key:"user"},"User: ",e.username)),""!=e.comment&&a.push(React.createElement("div",{key:"comment"},"Comment: ",React.createElement("b",null,e.comment))),null!=e.mpc_name?a.push(React.createElement("div",{key:"target"},"MPC Object: ",e.mpc_name)):a.push(React.createElement("div",{key:"target"},"RA Dec: ",e.ra," ",e.dec)),a.push(React.createElement("div",{key:"imgtype"},"Images: ",e.use_reduced?"Reduced":"Difference")),null!=e.mjd_min||null!=e.mjd_max){var i=null!=e.mjd_min?e.mjd_min:"0",n=null!=e.mjd_max?e.mjd_max:"∞";a.push(React.createElement("div",{key:"mjdrange"},"MJD range: [",i,", ",n,"]"))}return a.push(React.createElement("div",{key:"queuetime"},"Queued at ",e.timestamp)),null!=e.finishtimestamp?(a.push(React.createElement("div",{key:"status"},"Finished at ",e.finishtimestamp)),null!=e.error_msg?a.push(React.createElement("p",{key:"error_msg",style:{color:"black",fontWeight:"bold"}},"Error: ",e.error_msg)):("FP"==e.request_type&&(a.push(React.createElement("a",{key:"datalink",className:"results btn btn-info getdata",href:e.result_url,target:"_blank"},"Data")),a.push(React.createElement("a",{key:"pdflink",className:"results btn btn-info getpdf",href:e.pdfplot_url,target:"_blank"},"PDF"))),"IMGZIP"==e.request_type?null!=e.result_imagezip_url&&a.push(React.createElement("a",{key:"imgdownload",className:"results btn btn-info",href:"{% url 'taskimagezip' task.parent_task_id}"},"Download images (ZIP)")):null!=e.imagerequest_taskid?e.imagerequest_finished?a.push(React.createElement("a",{key:"imgrequest",className:"btn btn-primary",href:e.imagerequest_url},"Images ready")):a.push(React.createElement("a",{key:"imgrequest",className:"btn btn-warning",href:e.imagerequest_url},"Images requested")):user_id==e.user_id&&a.push(React.createElement("button",{key:"imgrequest",className:"btn btn-info",onClick:this.requestImages,title:"Download FITS and JPEG images for up to the first 500 observations."},"Request ",e.use_reduced?"reduced":"diff"," images")))):null!=e.starttimestamp?a.push(React.createElement("div",{key:"status",style:{color:"red",fontStyle:"italic"}},"Running (started ",this.state.timeelapsed," seconds ago)")):a.push(React.createElement("div",{key:"status"},"Waiting (",e.queuepos," tasks ahead of this one)")),null!=e.finishtimestamp&&null==e.error_msg&&"FP"==e.request_type&&a.push(React.createElement(TaskPlot,{key:"plot",taskid:e.id})),React.createElement("li",{key:"task-"+e.id,className:"task "+t,id:"task-"+e.id},a)}}function getCursor(e){return null==e?null:new URL(e).searchParams.get("cursor")}class Pager extends React.Component{constructor(e){super(e),this.state={},this.state.previous=this.props.previous,this.state.next=this.props.next,this.state.pagetaskcount=this.props.pagetaskcount,this.state.taskcount=this.props.taskcount,this.state.previous_cursor=getCursor(this.props.previous),this.state.next_cursor=getCursor(this.props.next)}static getDerivedStateFromProps(e,t){var s={};return e.previous!=t.previous&&(s.previous=e.previous,s.previous_cursor=getCursor(e.previous)),e.next!=t.next&&(s.next=e.next,s.next_cursor=getCursor(e.next)),e.pagetaskcount!=t.pagetaskcount&&(s.pagetaskcount=e.pagetaskcount),e.taskcount!=t.taskcount&&(s.taskcount=e.taskcount),Object.keys(s).length>0?s:null}shouldComponentUpdate(e,t){return JSON.stringify(this.props)!=JSON.stringify(e)}render(){return console.log("Pager rendered"),null==this.state.taskcount?null:React.createElement("div",{id:"paginator",key:"paginator"},React.createElement("p",{key:"pagedescription"},"Showing ",this.state.pagetaskcount," of ",this.state.taskcount," tasks"),React.createElement("ul",{key:"prevnext",className:"pager"},null!=this.state.previous?React.createElement("li",{key:"previous",className:"previous"},React.createElement("a",{onClick:()=>{this.props.updateCursor(this.state.previous_cursor)},style:{cursor:"pointer"}},"« Newer")):null,null!=this.state.next?React.createElement("li",{key:"next",className:"next"},React.createElement("a",{onClick:()=>{this.props.updateCursor(this.state.next_cursor)},style:{cursor:"pointer"}},"Older »")):null))}}class TaskList extends React.Component{constructor(e){super(e),this.state={taskcount:null,results:null,status:"Loading...",api_url:e.api_url},this.setSingleTaskView=this.setSingleTaskView.bind(this),this.updateCursor=this.updateCursor.bind(this),this.fetchData=this.fetchData.bind(this)}setSingleTaskView(e){console.log("Task list changed to single task view for ",e),this.setState({api_url:e}),window.history.pushState({},document.title,e),this.fetchData(!0),$("#tasklist").addClass("singletaskdetail"),$(".newrequest").hide()}updateCursor(e){console.log("Task list cursor changed to ",e);var t=new URL(api_url_base+"queue/");null!=e&&t.searchParams.set("cursor",e),this.setState({api_url:t.toString()});var s=new URL(window.location.href);null!=e&&s.searchParams.set("cursor",e),window.history.pushState({},document.title,s),this.fetchData(!0)}fetchData(e){document[hidden]||(api_request_active?console.log("prevent overlapping GET requests"):(api_request_active=!0,console.log("Fetching task list from ",this.state.api_url),fetch(this.state.api_url,{headers:{Accept:"application/json","Content-Type":"application/json"}}).then((e=>(api_request_active=!1,e.json()))).then((t=>{t.hasOwnProperty("results")?this.setState(t):this.setState({results:[t]}),e&&window.scrollTo(0,0)}))))}componentDidMount(){this.fetchData(!1),this.interval=setInterval((()=>this.fetchData()),2e3)}componentWillUnmount(){clearInterval(this.interval)}render(){if(null==this.state.results)return React.createElement("p",null,"Loading tasks...");if(0==this.state.results.length)return React.createElement("p",null,"There are no tasks.");var e=null!=this.state.results?this.state.results.length:null;return React.createElement("div",null,React.createElement("ul",{key:"tasklist",className:"tasks"},this.state.results.map((e=>React.createElement(Task,{key:e.id,taskdata:e,fetchData:this.fetchData,setSingleTaskView:this.setSingleTaskView})))),React.createElement(Pager,{key:"pager",previous:this.state.previous,next:this.state.next,pagetaskcount:e,taskcount:this.state.taskcount,updateCursor:this.updateCursor}))}}ReactDOM.render(React.createElement(TaskList,{api_url:api_url}),document.getElementById("tasklist"));
