name: Source linting and formatting

on:
  push:

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # this is needed to the get the automatic version correct
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install -r requirements.txt

          # upgrade all installed packages to their latest versions
          # python3 -m pip list --format=freeze --outdated | cut -d '=' -f1 | xargs -n1 python3 -m pip install --upgrade

      - name: Install package
        run: |
          python -m pip install -e .

      - name: Lint with flake8 (errors)
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,E128,E231,E261,E262,E301,E302,E303,E305,F7,F63,F82,F403,F541,W292,W293,W391 --show-source --statistics --max-line-length=120 --extend-exclude='plot_atlas_fp.py'

      - name: Lint with flake8 (warnings)
        run: |
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=20 --statistics --extend-exclude='plot_atlas_fp.py'

  black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade black

      - name: Use black to check formatting
        run: black --check --preview .
