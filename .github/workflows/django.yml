name: Django CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  ATLASSERVER_DJANGO_MYSQL_DBNAME: atlasserver
  ATLASSERVER_DJANGO_MYSQL_USER: root
  ATLASSERVER_DJANGO_MYSQL_PASSWORD: root
  ATLASSERVER_EMAIL_HOST_USER: atlasforced@gmail.com
  ATLASSERVER_DJANGO_SECRET_KEY: ${{secrets.ATLASSERVER_DJANGO_SECRET_KEY}}

jobs:
  build:
    environment: test
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    # services:
    #     mysql:
    #         image: mysql:5.7
    #         env:
    #             MYSQL_ALLOW_EMPTY_PASSWORD: yes
    #             MYSQL_DATABASE: atlasserver
    #             MYSQL_USER: root
    #             MYSQL_PASSWORD: password
    #             MYSQL_ROOT_PASSWORD: password
    #         ports:
    #             - 3306
    #         options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r requirements.txt

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          echo "mysql started"
          mysql -e "CREATE DATABASE ${{env.ATLASSERVER_DJANGO_MYSQL_DBNAME}};" -u${{env.ATLASSERVER_DJANGO_MYSQL_USER}} -p${{env.ATLASSERVER_DJANGO_MYSQL_PASSWORD}}

      - name: Run Tests
        run: |
          cat atlasserver/settings_test.txt >> atlasserver/settings.py
          ./manage.py test
          python -m pip install -e .
          # atlaswebserver start
          # atlastaskrunner start
          # atlastaskrunner stop
          # atlaswebserver stop
